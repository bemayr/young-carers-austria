/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    references: Reference;
    situations: Situation;
    sources: Source;
    'chatbot-characters': ChatbotCharacter;
    users: User;
  };
  globals: {
    'app-accessibility': AppAccessibility;
    'app-copyright': AppCopyright;
    'app-gdpr': AppGdpr;
    'app-imprint': AppImprint;
    'app-welcome': AppWelcome;
    'chatbot-messages': ChatbotMessage;
    faq: Faq;
    help: Help;
    infos: Info;
    emergency: Emergency;
    'website-accessibility': WebsiteAccessibility;
    'website-copyright': WebsiteCopyright;
    'website-gdpr': WebsiteGdpr;
    'website-imprint': WebsiteImprint;
    'website-landing': WebsiteLanding;
  };
}
export interface Category {
  id: string;
  name: string;
  heading: string;
  description: {
    [k: string]: unknown;
  }[];
  keywords?: string;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Reference {
  id: string;
  address: string;
  title: string;
  description: string;
  image: string;
  containsPaidContent: boolean;
  keywords?: string;
  source: string | Source;
  categories: string[] | Category[];
  opengraph?: {
    title?: string;
    description?: string;
    imageUrl?: string;
  };
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Source {
  id: string;
  name: string;
  homepage?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Situation {
  id: string;
  name: string;
  content: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface ChatbotCharacter {
  id: string;
  name: string;
  emoji: string;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface AppAccessibility {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface AppCopyright {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface AppGdpr {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface AppImprint {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface AppWelcome {
  id: string;
  hello: {
    [k: string]: unknown;
  }[];
  info: {
    [k: string]: unknown;
  }[];
  feedback: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface ChatbotMessage {
  id: string;
  welcome: {
    choices: {
      messages: {
        message: {
          [k: string]: unknown;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
  };
  'no-result-found': {
    choices: {
      messages: {
        message: {
          [k: string]: unknown;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
  };
  'results-found': {
    choices: {
      messages: {
        message: {
          [k: string]: unknown;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
  };
  feedback: {
    choices: {
      messages: {
        message: {
          [k: string]: unknown;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
  };
  _status?: 'draft' | 'published';
}
export interface Faq {
  id: string;
  entries: {
    question: string;
    answer: {
      [k: string]: unknown;
    }[];
    showOnLandingPage: boolean;
    id?: string;
  }[];
  _status?: 'draft' | 'published';
}
export interface Help {
  id: string;
  title: string;
  description: {
    [k: string]: unknown;
  }[];
}
export interface Info {
  id: string;
  title: string;
  description: {
    [k: string]: unknown;
  }[];
}
export interface Emergency {
  id: string;
  title: string;
  description: {
    [k: string]: unknown;
  }[];
  numbers: {
    label: string;
    number: string;
    id?: string;
  }[];
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface WebsiteAccessibility {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface WebsiteCopyright {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface WebsiteGdpr {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface WebsiteImprint {
  id: string;
  content: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
export interface WebsiteLanding {
  id: string;
  cards: {
    infos: {
      icon: string;
      title: string;
      description: string;
    };
    situations: {
      icon: string;
      title: string;
      description: string;
    };
    emergency: {
      icon: string;
      title: string;
      description: string;
    };
    chatbot: {
      icon: string;
      title: string;
      description: string;
    };
    app: {
      icon: string;
      title: string;
      description: string;
    };
  };
  'app-quotes': {
    text: string;
    id?: string;
  }[];
  about: {
    [k: string]: unknown;
  }[];
  _status?: 'draft' | 'published';
}
